{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:component",
  "title": "Badge",
  "description": "A small badge component with customizable variants and shiny animation effects.",
  "author": "Ahdeetai <https://aditya.is-cool.dev>",
  "dependencies": ["class-variance-authority", "clsx", "tailwind-merge"],
  "files": [
    {
      "type": "registry:component",
      "path": "components/ui/badge.tsx",
      "target": "components/ui/badge.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\"\n      },\n      shiny: {\n        true: \"relative overflow-hidden\",\n        false: \"\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      shiny: false\n    }\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {\n  shiny?: boolean;\n  shinySpeed?: number;\n}\n\nfunction Badge({\n  className,\n  variant,\n  shiny = false,\n  shinySpeed = 5,\n  children,\n  ...props\n}: BadgeProps) {\n  const animationDuration = `${shinySpeed}s`;\n\n  return (\n    <div\n      className={cn(badgeVariants({ variant, shiny }), className)}\n      {...props}\n    >\n      <span className={shiny ? \"relative z-10\" : \"\"}>{children}</span>\n\n      {shiny && (\n        <span\n          className=\"absolute inset-0 pointer-events-none animate-shine dark:hidden\"\n          style={{\n            background:\n              \"linear-gradient(120deg, transparent 40%, rgba(255,255,255,0.6) 50%, transparent 60%)\",\n            backgroundSize: \"200% 100%\",\n            animationDuration,\n            mixBlendMode: \"screen\"\n          }}\n        />\n      )}\n\n      {shiny && (\n        <span\n          className=\"absolute inset-0 pointer-events-none animate-shine hidden dark:block\"\n          style={{\n            background:\n              \"linear-gradient(120deg, transparent 40%, rgba(0,0,150,0.25) 50%, transparent 60%)\",\n            backgroundSize: \"200% 100%\",\n            animationDuration,\n            mixBlendMode: \"multiply\"\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport { Badge, badgeVariants };"
    },
    {
      "type": "registry:lib",
      "path": "lib/utils.ts",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}"
    }
  ]
}
